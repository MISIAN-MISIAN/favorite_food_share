%main.main
  %section.main__block
    = form_with model:@post, local:true do |f|
      %h2.sell__block__head
        食事の写真を入力してください
      .sell__block__form
        .sell__block__form__upload
          %h3.sell__block__form__upload__head
            食事画像
            %span.require 必須
          %p 最大10枚までアップロードできます
          #image-box-1
            .item-num-0#image-box__container
              .input-area
                = f.file_field :image, style: "display:none", id:"img-file"
                %label{for: "img-file"}
                  %i.fas.fa-camera
            - if @post.errors.any?
              - if @post.errors[:image]
                .error-messages
                  - @post.errors.full_messages_for(:image).each do |error|
                    .error-message
                      画像がありません
        .sell__block__form__name
          .form-group__name.select1
            %label
              タイトルor店名
              %span.require 必須
            %div
              = f.text_field :meals, class: "form__group__name title",placeholder:"タイトルor店名の入力をしてください　例)ハンバーガー、いきなりステーキetc"
            %label
              食事時間
              %span.require 必須
            %div
              = f.select :meals, [["Breakfast"],["Lunch"],["Afternoon Snack"],["Dinner"],["Favorite Restaurant"]],{prompt:"選択してください"},class: "form__group__name"
            - if @post.errors.any?
              - if @post.errors[:meals]
                .error-messages
                  - @post.errors.full_messages_for(:meals).each do |error|
                    .error-message
                      入力してください
          .form-group__name.select2   
            %label.is-hidden1
              住所
              %span.require Favorite Restaurantを選ばれた場合入力
            %div.is-hidden1 
              = f.text_field :address, class: "form__group__name title",placeholder:"レストランの住所を入力してください　例)　東京都港区１−１−１"
          .form-group__description
            %label
              食事の説明
              %span.require 必須
            %div
              = f.text_area :description, {placeholder:"商品の説明（必須 1,000文字以内）（食事名、材料、作り方など）例）ハンバーガーを作りました。買ってきたバンズにトマトとレタスと昨晩の残りのハンバーグを挟み、ウイスターソースとケチャップでタレを作りました",rows: "5", class: "textarea__default" }
            - if @post.errors.any?
              - if @post.errors[:description]
                .error-messages
                  - @post.errors.full_messages_for(:description).each do |error|
                    .error-message
                      入力してください
          .sell__block__form__btn
            %div
              = f.submit "投稿する",class: "btn-default__btn-red"
              = link_to "もどる", root_path, class: "btn-default__btn-gray"
            -# #map
            -# :javascript
            -#   function initMap() {

            -#     var test = {lat: #{@post.latitude}, lng: #{@post.longitude}};
            -#     var map = new google.maps.Map(document.getElementById('map'), {
            -#       zoom: 15,
            -#       center: test
            -#     });
            -#     var transitLayer = new google.maps.TransitLayer();
            -#     transitLayer.setMap(map);

            -#     var contentString = '住所：#{@post.address}';
            -#     var infowindow = new google.maps.InfoWindow({
            -#       content: contentString
            -#     });

            -#     var marker = new google.maps.Marker({
            -#       position:test,
            -#       map: map,
            -#       title: contentString
            -#     });

            -#     marker.addListener('click', function() {
            -#       infowindow.open(map, marker);
            -#     });
            -#   }
            -# %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?v=3.exp&key=google_map_api&callback=initMap"}
            -# :cdata

          -# %div(style="width: 100%;" )
          -#   #map(style="height: 200px;" )
          -#     :javascript
          -#       handler = Gmaps.build('Google');
          -#       handler.buildMap({
          -#         provider: {
          -#           zoom: 12,
          -#           center:    new google.maps.LatLng(#{@post.latitude}, #{@post.longitude}),
          -#           mapTypeId: google.maps.MapTypeId.ROADMAP
          -#         },
          -#         internal: {id: 'map'}}, function(){
          -#         handler.fitMapToBounds();
          -#       });
          -#     %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?v=3.exp&key=google_map_api&callback=initMap"}


